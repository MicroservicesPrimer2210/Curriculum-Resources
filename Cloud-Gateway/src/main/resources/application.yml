server:
  port: 9000


spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      routes:
      - id: example-route # each route will have an id 
        uri: https://www.google.com/ # where we will route to 
        predicates: # The requirement for this route to activate. 
        - Path=/example # This request to localhost:9000/example --> www.google.com/example 
        filters: #Modify the request 
        - SetPath=/ #Delete the example path value so that the request turns into just www.google.com/
      - id: planet-route 
        uri: lb://Planet-Service #SCG uses a round robin load balancer, the name is from the service discovery   #http://localhost:7010/
        predicates: 
        - Path=/planet-api/** 
        filters:
        - RewritePath=/planet-api(?<segment>/?.*), $\{segment}
      - id: consumer-route
        uri: lb://consumer-service
        predicates:
        - Path=/front-facing/**
#        - Cookie=key,value
#        - After=<time and date>[time zone] #This will route all requests after the specified date and time 
#        - Before=<time and date>[time zone]
#        - Host= *.locahost #specifing the domain of traffic
        filters:
        - RewritePath=/front-facing(?<segment>/?.*), $\{segment}
      - id: aggregater-route
        uri: lb://Aggregator-Service
        predicates: 
        - Path=/agg/**
        filters:
        - RewritePath=/agg(?<segment>/?.*), $\{segment}
        
        
 # Route: Consists of an ID, a destination URI and a collection of predicates and filters. 
 # Predicates: Built of Java 8 Function PRedicates - this allows us to match requests to our routes (HTTP uri, methods, time ,cookies, etc .)
  #
 # Filter: These are instances of Spring Gateway filters, allows us to modify the request or response before being sent. 
  sleuth:
    sampler:
      probability: 1 #Grab 10% of the requests if 0.1, if we want 100% we'll give the number 1.0
    web:
      skip-pattern: (^cleanup.*) #This will ignore any requests to this endpoint. 

#  zipkin:
#    base-url: specifing the domain when we work in docker compose networks

management:
  endpoints:
    web:
      exposure:
        include:
        - prometheus
        - info
        - health
